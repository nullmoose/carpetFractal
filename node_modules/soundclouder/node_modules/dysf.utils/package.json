{
  "name": "dysf.utils",
  "description": "Custom dysfunctional utilities for node.js",
  "version": "0.1.0",
  "author": {
    "name": "Nik Khilnani",
    "email": "nik@khilnani.org"
  },
  "maintainers": [
    {
      "name": "Nik Khilnani",
      "email": "nik@khilnani.org"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/khilnani/dysf.utils.git"
  },
  "keywords": [
    "logging",
    "utilities",
    "node.js"
  ],
  "dependencies": {
    "vows": "0.7.0",
    "callsite": "0.x.x",
    "chalk": "0.4.0"
  },
  "main": "./lib/dysf.utils",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "vows --spec"
  },
  "readme": "**Table of Contents**  *generated with [DocToc](http://doctoc.herokuapp.com/)*\n\n- [dysf.utils [![Build Status](https://travis-ci.org/khilnani/dysf.utils.png?branch=master)](https://travis-ci.org/khilnani/dysf.utils)](#dysfutils-!build-statushttpstravis-ciorgkhilnanidysfutilspngbranch=masterhttpstravis-ciorgkhilnanidysfutils)\n- [Usage](#usage)\n- [API](#api)\n\t- [logger](#logger)\n\t- [utils](#utils)\n\t- [mock](#mock)\n- [Installation](#installation)\n\t- [Global](#global)\n\t- [Project](#project)\n\ndysf.utils [![Build Status](https://travis-ci.org/khilnani/dysf.utils.png?branch=master)](https://travis-ci.org/khilnani/dysf.utils)\n==========\n\nCustom dysfunctional utilities for node.js !!!\n\nUsage\n=========\n\n- utils - <code>utils = require(\"dysf.utils\").utils;</code>\n- logger - <code>logger = require(\"dysf.utils\").logger;</code>\n- mock - <code>mock = require(\"dysf.utils\").mock;</code>\n\nAPI\n==========\n\nlogger\n----------\n\nA key reason for creating my own logger was to print file path and line numbers from where a log message was called.\nAdditionally it prints the date/time and also has a few additional levels of logging.\n\n- logger.setLogLevel( id ) \n  - 0: system, 1: error, 2: warn, 3: event, 4: info, 5: debug, 6: trace. Default is 4 (info)\n- logger.system ( msg | obj ) \n  - Useful for system level notifications.\n- logger.error ( msg | obj )\n- logger.warn ( msg | obj )\n- logger.event ( msg | obj )\n  - Recommended for key events like new tranactions / sessions / requests etc.\n- logger.info ( msg | obj )\n  - Recommended for notable phases within a transaction like handlers, methods etc.\n- logger.debug ( msg | obj )\n  - Recommended for useful property values or callback tracking.\n- logger.trace ( msg | obj )\n  - Recommended for detailed debugging like printing object contents.\n\nutils\n----------\n\nA random utility collection of one. Render a file to the Response \nin cases where you are not using a micro or mega framework.\n\n- utils.renderFile ( response, path, replaceParams, callback )\n  - response: Http Response\n  - path: path to file\n  - replaceParams: A hash of Ket Value pairs with the key representing the string to replace with the Value.\n  - callback: to help with callback hell.\n\nmock\n----------\n\nThe start of a few mock objects primarily useful in quick and dirty unit testing.\n\n- mock.response ( text )\n   \n\n\nInstallation\n=======\n\nGlobal\n--------- \n- Run: <code>sudo npm install dysf.utils -g</code>\n- Usually installed at - /usr/local/lib/node_modules/dysf.utils\n\nProject\n---------\n- Add <code>\"dysf.utils\": \"x.x.x\"</code> to the dependencies section of your project's package.json \n  - Example <code>\"dependencies\": { \"dysf.utils\": \"x.x.x\" }</code>\n- Run <code>npm install</code> in the director with your package.json\n- Usually installed at - PROJECT_DIR/node_modules/dysf.utils\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/khilnani/dysf.utils/issues"
  },
  "homepage": "https://github.com/khilnani/dysf.utils",
  "_id": "dysf.utils@0.1.0",
  "_shasum": "79d134136425a308ccabf70d7be918602e3c91cb",
  "_from": "dysf.utils@0.1.0",
  "_resolved": "https://registry.npmjs.org/dysf.utils/-/dysf.utils-0.1.0.tgz"
}
